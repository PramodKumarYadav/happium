# https://junit.org/junit5/docs/current/user-guide/#writing-tests-parallel-execution
# To run tests in parallel: https://java.christmas/2019/14
# The only dependency needed in pom is (junit-jupiter, maven-compiler-plugin; maven-surefire-plugin) - that's it!
# To run tests or classes in sequence, use value : same_thread. for running in parallel use value: concurrent

junit.jupiter.execution.parallel.enabled=true
junit.jupiter.execution.parallel.mode.default = same_thread
junit.jupiter.execution.parallel.mode.classes.default = concurrent

# Different modes of configurations below (dynamic, fixed)
# https://junit.org/junit5/docs/current/user-guide/#writing-tests-parallel-execution-config
# Note: First try with dynamic configuration and see at what thread count your system chokes.
# Once you find that threshold, switch from dynamic mode to fixed mode.
junit.jupiter.execution.parallel.config.strategy = dynamic
junit.jupiter.execution.parallel.config.dynamic.factor = 1

# Once you find the thread count at which your system chokes, you can now fix the number of threads to that value.
# junit.jupiter.execution.parallel.config.strategy = fixed
# junit.jupiter.execution.parallel.config.fixed.parallelism = 2