# Guidelines: Endpoints to have no starting or ending forward slash.
# Capabilities are build using below 4 properties:
    # PLATFORM_NAME (android or ios)
    # DEVICE_TYPE (real or virtual).
    # DEVICE_NAME (say iphone_7 or samsung_10) - [Real- with deviceID settings or virtual - Virtual with say avd settings for android]
    # HOST (say app picked from localhost - specified as a path OR app hosted on a server - specified as a http URL)

# Choose an env here: env="localhost", "browserstack"
HOST = "localhost"

# Platform to chose are: "android", "ios"
PLATFORM_NAME = "android"

# DEVICE_TYPE to chose are: "virtual", "real"
DEVICE_TYPE = "virtual"

# If you want to test with a specific device; then the only choice you have got is to run your tests in series.
# Since you cannot choose just one device and run tests in parallel. In that case, go to junit.platform.properties file and
# change junit.jupiter.execution.parallel.enabled=false and then you can run with a specific device of your choice (say: Pixel_4_API_31).
# Note that if you are running tests in one of the valid parallel modes, than this device choice is ignored and the devices
# are rather picked from AndroidEmulators enum class (or ios class) based on if the device is real or virtual. 
DEVICE_NAME = "Pixel_4_API_31"

# Place to put all your desired capabilities
PATH_JUNIT_PLATFORM_PROPERTIES = "./src/main/resources/junit-platform.properties"

# Place to put all your desired capabilities
PATH_DESIRED_CAPABILITIES = "./hosts/localhost"

# Virtual devices will have paths like below.
PATH_ANDROID_CAPABILITIES = ${PATH_DESIRED_CAPABILITIES}"/android"
PATH_ANDROID_COMMON_CAPABILITIES = ${PATH_ANDROID_CAPABILITIES}"/android-common-capabilities.json"
PATH_ANDROID_EMULATOR_DEFAULT_CAPABILITIES = ${PATH_ANDROID_CAPABILITIES}"/android-emulator-default-capabilities.json"

PATH_IOS_CAPABILITIES = ${PATH_DESIRED_CAPABILITIES}"/ios"
PATH_IOS_COMMON_CAPABILITIES = ${PATH_IOS_CAPABILITIES}"/ios-common-capabilities.json"
PATH_IOS_SIMULATOR_DEFAULT_CAPABILITIES = ${PATH_IOS_CAPABILITIES}"/ios-simulator-default-capabilities.json"

# Real devices will have paths like below: (Will be used in capabilities class as a combination of 'PATH_DESIRED_CAPABILITIES' and 'deviceName').
# pathRealDeviceCapabilities= ${PATH_DESIRED_CAPABILITIES}"/iphone_7.json"

# apps path (android and ios)
PATH_ANDROID_APP = "./app/Android.SauceLabs.Mobile.Sample.app.2.7.1.apk"
PATH_IOS_APP = "./app/to-be-added-Android.SauceLabs.Mobile.Sample.app.2.7.1.apk"

# https://github.com/saucelabs/sample-app-mobile#deep-linking
# deepLink URLs: The prefix deep link is swaglabs:// and the following screens (with their arguments) can be used:
SWAG_LABS_DEEP_LINK = "swaglabs://"
PACKAGE_NAME = "com.swaglabsmobileapp"

# Swag overview screen: swag-overview/ids where ids is a string of numbers from 0-5 separated with a ,. For example swag-overview/0,2. The number represents a product.
SWAG_ITEMS_OVERVIEW = ${SWAG_LABS_DEEP_LINK}"swag-overview"

# Swag details screen: swag-item/id where id is a number from 0-5. For example swag-item/0
SWAG_ITEM_DETAILS = ${SWAG_LABS_DEEP_LINK}"swag-item"

# Cart screen: cart/ids where ids is a string of numbers from 0-5 separated with a ,. For example cart/0,2. The number represents a product.
SWAG_CART_SCREEN = ${SWAG_LABS_DEEP_LINK}"cart"

# Personal info screen: personal-info/ids where ids is a string of numbers from 0-5 separated with a ,. For example cart/0,2. The number represents a product.
SWAG_PERSONAL_INFO = ${SWAG_LABS_DEEP_LINK}"personal-info"

# Checkout overview screen: checkout-overview/ids where ids is a string of numbers from 0-5 separated with a ,. For example cart/0,2. The number represents a product.
SWAG_CHECKOUT_OVERVIEW_SCREEN = ${SWAG_LABS_DEEP_LINK}"checkout-overview"

# Complete screen: complete
SWAG_COMPLETE_SCREEN = ${SWAG_LABS_DEEP_LINK}"complete"

# Webview screen: webview
SWAG_WEB_VIEW_SCREEN = ${SWAG_LABS_DEEP_LINK}"webview"
